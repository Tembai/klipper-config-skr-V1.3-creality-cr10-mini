# This file contains common pin mappings for the BIGTREETECH SKR V1.3
# board. To use this config, the firmware should be compiled for the
# LPC1768.

# See the example.cfg file for a description of available parameters.


# will possibly need to adjust the max positions. The standard config file for the creality cr10 mini seems to use 16 microsteps,
# but this file seems to use 1/80=0.0125 => 80 microsteps.

# PID values are different too

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
#step_distance: .0125
rotation_distance: 40
endstop_pin: ^P1.29  # P1.28 for X-max
position_endstop: 0
position_max: 300
#homing_speed: 50

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
microsteps: 16
#step_distance: .0125
rotation_distance: 40
endstop_pin: ^P1.27  # P1.26 for Y-max
position_endstop: 0
position_max: 220
#homing_speed: 50

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 16
#step_distance: .0025
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop  # Use BLTouch as Z endstop
#position_endstop: 0  # Not used with probe
position_min: -5  # Allow going below 0 for probe calibration
position_max: 400

[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
microsteps: 16
#step_distance: .010526
rotation_distance: 33.683
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Generic 3950
sensor_pin: P0.24
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 250

#[extruder1]
#step_pin: P0.1
#dir_pin: P0.0
#enable_pin: !P0.10
#heater_pin: P2.4
#sensor_pin: P0.25
#...

[heater_bed]
heater_pin: P2.5
#sensor_type: ATC Semitec 104GT-2
sensor_type: Generic 3950
sensor_pin: P0.23
#control: watermark
# alternativ zu watermark: pid
control: pid
pid_Kp: 690.34
pid_Ki: 111.47
pid_Kd: 1068.83
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_lpc1768_0E700116612448AFBA2F285DC32000F5-if00
serial: /dev/ttyAMA0
baud: 250000
#serial: /dev/serial0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100


########################################
# TMC2208 configuration
########################################

[tmc2208 stepper_x]
uart_pin: P1.17
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2208 stepper_y]
uart_pin: P1.15
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2208 stepper_z]
uart_pin: P1.10
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999

[tmc2208 extruder]
uart_pin: P1.8
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999



########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

# See the sample-lcd.cfg file for definitions of common LCD displays.

###
### "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
###
[display]
lcd_type: st7920
cs_pin: EXP1_4
sclk_pin: EXP1_5
sid_pin: EXP1_3
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

[output_pin beeper]
pin: EXP1_1

# Virtual SD Card for OctoPrint compatibility
[virtual_sdcard]
path: ~/gcode_files

# Pause/Resume support
[pause_resume]

# Display status for OctoPrint
[display_status]

# 3DTouch configuration as simple probe (no BLTouch verification)
[servo probe_servo]
pin: P2.0                   # Servo control pin
maximum_servo_angle: 180
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025

[probe]
pin: !P1.25                 # Probe sensor pin (inverted logic for 3DTouch)
activate_gcode: DEPLOY_PROBE # Deploy probe before probing
deactivate_gcode: STOW_PROBE # Stow probe after probing
x_offset: -44               # Measure: nozzle to probe in X (negative if probe is left of nozzle)
y_offset: -6                # Measure: nozzle to probe in Y (negative if probe is in front of nozzle)
z_offset: 0                 # Will be calibrated with PROBE_CALIBRATE command
speed: 2.0                  # Slow probing speed
samples: 1                  # Single sample
sample_retract_dist: 5.0    # Smaller retract distance

[gcode_macro DEPLOY_PROBE]
gcode:
    SET_SERVO SERVO=probe_servo ANGLE=30    # Deploy probe
    G4 P300                                 # Wait for movement
    SET_SERVO SERVO=probe_servo WIDTH=0     # Disable servo

[gcode_macro STOW_PROBE] 
gcode:
    SET_SERVO SERVO=probe_servo ANGLE=90    # Try different stow angle
    G4 P300                                 # Wait for movement  
    SET_SERVO SERVO=probe_servo WIDTH=0     # Disable servo

[gcode_macro RESET_PROBE]
gcode:
    SET_SERVO SERVO=probe_servo ANGLE=160   # Reset pulse
    G4 P300                                 # Wait
    SET_SERVO SERVO=probe_servo WIDTH=0     # Disable servo

[gcode_macro TEST_PROBE]
gcode:
    {action_respond_info("Starting functional probe test...")}
    
    # Ensure we're fully homed first
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
        {action_respond_info("Homing all axes first...")}
        STOW_PROBE                          # Ensure probe is stowed
        G28 X Y                             # Home X and Y first
        G0 X150 Y110 F3000                  # Move to center
        DEPLOY_PROBE                        # Deploy for Z homing
        G28 Z                               # Home Z
        STOW_PROBE                          # Stow after homing
    {% endif %}
    
    # Move to center of bed for testing
    G0 X150 Y110 Z10 F3000
    
    # Test 1: Try a real probe operation
    {action_respond_info("Test 1: Attempting actual bed probe...")}
    DEPLOY_PROBE
    G4 P200
    
    # Attempt to probe - this will fail if probe doesn't work
    PROBE
    {% set probe_result = printer.probe.last_z_result %}
    
    {% if probe_result is none %}
        STOW_PROBE
        {action_raise_error("PROBE TEST FAILED: No probe result obtained")}
    {% else %}
        {action_respond_info("PASS: Probe successful, Z height = %.3f" % probe_result)}
    {% endif %}
    
    # Return to safe state
    STOW_PROBE
    G0 Z10 F1000
    {action_respond_info("Functional probe test completed successfully!")}

[gcode_macro SAFE_Z_HOME_WITH_TEST]
gcode:
    {action_respond_info("Starting safe Z homing with functional probe test...")}
    
    # First do a functional probe test
    TEST_PROBE
    
    # If we get here, probe is working - proceed with homing
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}
    
    # Move to safe homing position
    G0 X150 Y110 F3000
    
    # Deploy probe and home Z
    DEPLOY_PROBE
    G4 P500
    G28 Z
    STOW_PROBE
    
    {action_respond_info("Safe Z homing with probe verification completed!")}

# Override homing commands to automatically handle probe deployment
[homing_override]
axes: z
gcode:
    {% set home_z = 'Z' in params %}
    {% set home_all = params|length == 0 %}
    
    {% if home_z or home_all %}
        # Homing Z axis (either alone or as part of full home)
        {action_respond_info("Homing Z axis with probe management...")}
        
        # Ensure X/Y are homed first
        {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes %}
            {action_respond_info("X/Y not homed, homing them first...")}
            
            # Lift Z first for safety (if Z can move)
            {% if "z" in printer.toolhead.homed_axes %}
                G91                         # Relative mode
                G1 Z40 F1000               # Lift Z 40mm for clearance
                G90                        # Back to absolute mode
            {% endif %}
            
            G28 X Y                         # Home X Y first
            G4 P1000                        # Wait for homing to complete
        {% endif %}
        
        # Ensure we're in absolute mode
        G90
        
        # Move to safe homing position
        G0 X150 Y110 F3000                  # Move to safe position
        
        # Deploy probe and home Z
        DEPLOY_PROBE                        # Deploy probe for Z
        G4 P500                             # Wait for deployment
        
        # Reset probe first to clear any errors
        RESET_PROBE
        G4 P500                             # Wait after reset
        DEPLOY_PROBE                        # Deploy again
        G4 P500                             # Wait for deployment
        
        # Use Klipper's built-in Z homing since probe is configured as endstop
        {action_respond_info("Starting Z homing with probe...")}
        G28 Z                               # Use built-in Z homing with probe endstop
        G1 Z5 F1000                         # Lift Z slightly after homing
        
        STOW_PROBE                          # Stow probe after homing
        
    {% else %}
        # Homing other axes (X, Y, XY) - use normal homing with Z lift
        {% if "z" in printer.toolhead.homed_axes %}
            G91                             # Relative mode
            G1 Z40 F1000                   # Lift Z 40mm for clearance
            G90                            # Back to absolute mode
        {% endif %}
        G28 {rawparams}
    {% endif %}

[gcode_macro SAFE_Z_HOME]
gcode:
    # Override the default homing with probe safety checks
    {action_respond_info("Starting safe Z homing with probe verification...")}
    
    # First verify probe is working
    TEST_PROBE
    
    # Home X and Y first
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}
    
    # Move to safe homing position
    G0 X150 Y110 F3000
    
    # Deploy probe for homing
    DEPLOY_PROBE
    G4 P500
    
    # Note: 3DTouch clones may not report state correctly, but physical deployment works
    {action_respond_info("Probe deployed - proceeding with Z homing")}
    
    # Perform Z homing
    G28 Z
    
    # Stow probe after successful homing
    STOW_PROBE
    {action_respond_info("Safe Z homing completed successfully!")}

[gcode_macro SAFE_PROBE_CALIBRATE]
gcode:
    # Safe probe calibration with verification
    {action_respond_info("Starting safe probe calibration...")}
    
    # Verify probe is working
    TEST_PROBE
    
    # Ensure we're homed
    {% if "z" not in printer.toolhead.homed_axes %}
        SAFE_Z_HOME
    {% endif %}
    
    # Start calibration
    DEPLOY_PROBE
    PROBE_CALIBRATE
    # Note: User must run ACCEPT and SAVE_CONFIG manually after adjustment

[gcode_macro SAFE_BED_MESH]
gcode:
    # Safe bed mesh with probe verification
    {action_respond_info("Starting safe bed mesh calibration...")}
    
    # Verify probe is working
    TEST_PROBE
    
    # Ensure we're homed
    {% if "z" not in printer.toolhead.homed_axes %}
        SAFE_Z_HOME
    {% endif %}
    
    # Deploy probe and run bed mesh
    DEPLOY_PROBE
    BED_MESH_CALIBRATE
    STOW_PROBE
    {action_respond_info("Bed mesh calibration completed!")}

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 50, 20       # Account for probe offset
mesh_max: 250, 210     # Account for probe offset  
probe_count: 5, 5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

###
### MKS Mini 12864 LCD - does not work
###
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_6
#a0_pin: EXP1_7
#contrast: 40
#encoder_pins: ^EXP2_3, ^EXP2_5
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

###
### 128x64 Full Graphic Creality CR10 / Ender 3 stockdisplay - does not work
###
#[display]
#lcd_type: st7920
#cs_pin: EXP1_7
#sclk_pin: EXP1_6
#sid_pin: EXP1_8
#encoder_pins: ^EXP1_5, ^EXP1_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1


